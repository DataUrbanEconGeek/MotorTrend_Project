htmlTreeParse(appURL)
remDr$getPageSource()
test <- remDr$getPageSource()
htmlTreeParse(test)
htmlParse(test)
html_structure(test)
htmlParse(remDr$getCurrentUrl())
remDr$getCurrentUrl()
test
class(test)
install.packages('rvest')
tableElem<- remDr$findElement("class", "fl-member-card__user")
res <- htmlTreeParse(tableElem$getElementAttribute("outerHTML")
)
elem <- tableElem$getElementAttribute("outerHTML")
elem
tableElem<- remDr$findElements("class", "fl-member-card__user")
elem <- tableElem$getElementAttribute("outerHTML")
tableElem
tableElem<- remDr$findElement("class", "fl-member-card__user")
tableElem
tableElem<- remDr$findElements("class", "fl-member-card__user")
tableElem<- remDr$findElement("class", "fl-member-card__user")
tableElem<- remDr$findElement("class", "fl-overflow--hidden fl-margin--b-l")
tableElem<- remDr$findElement("class", "fl-overflow--hidden.fl-margin--b-l")
tableElem<- remDr$findElement("class", "fl-overflow--hidden")
elem <- tableElem$getElementAttribute("outerHTML")
elem
res <- htmlTreeParse(elem, useInternalNodes=T)
res <- htmlTreeParse(file = elem, useInternalNodes=T)
elem2 <- unlist(elem)
res <- htmlTreeParse(file = elem2, useInternalNodes=T)
res
remDr$close()
res
res$children
xpathSApply(res, "//*/span[@class='fl-member-card__info']", xmlValue)
xpathSApply(res, "//*/span[@class='fl-flag__body']", xmlValue)
xpathSApply(res, "//*/a[@class='fl-flag__body']", xmlValue)
xpathSApply(res, "//*/div[@class='fl-flag__body']", xmlValue)
results <- xpathSApply(res, "//*/div[@class='fl-flag__body']", xmlValue)
content <- as.data.frame(matrix(results, ncol = 4, byrow = TRUE))
View(content)
results[1]
results[[1]]
results$1
results[1]
class(results[1])
results <- xpathSApply(res, "//*/a[@class='fl-member-card__user']/*/text()", xmlValue)
results
results <- xpathSApply(res, "//*/a[@class='fl-member-card__user']/text()", xmlValue)
results
results2 <- xpathSApply(res, "//*/span[@class='fl-member-card__info']/text()", xmlValue)
results2 <- xpathSApply(res, "//*/span[@class='fl-member-card__info'][1]/text()", xmlValue)
results2 <- xpathSApply(res, "//*/span[@class='fl-member-card__info']/text()", xmlValue)
results2 <- xpathSApply(res, "//*/span[@class='fl-member-card__info']/text()[1]", xmlValue)
results2 <- xpathSApply(res, "//*/span[@class='fl-member-card__info']/text()", xmlValue)
results2
results2[1]
content <- as.data.frame(matrix(results2, ncol = 1, byrow = TRUE))
View(content)
results3 <- xpathSApply(res, "//*/span[@class='fl-member-card__location']/text()", xmlValue)
results3[1]
results1[1]
results[1]
content2 <- as.data.frame(matrix(results3, ncol = 1, byrow = TRUE))
View(content2)
as.data.frame(results)
df <- cbind(as.data.frame(results), results2, results3)
View(df)
grep('[:alnum:]', content)
grep('[:alnum:]', df$results2)
grep('[:digits:]', df$results2)
grep('[:digits:]', df$results2[1])
grep('[:alnum:]', df$results2[1])
df$results2[1]
df$results2[2]
df$results2[[1]]
df$results2[1,1]
df$results2[1][1]
class(df$results2[1])
as.character(df$results2[1])
as.character(df$results2[1])[1]
unlist(df$results2[1])
as.character(df$results2[1])[1]
strsplit(as.character(df$results2[1]), "\n")
unlist(strsplit(as.character(df$results2[1]), "\n"))
unlist(strsplit(as.character(df$results2[1]), "\n"))[2]
unlist(strsplit(as.character(df$results2[1]), "\n"))[3]
unlist(strsplit(as.character(df$results2), "\n"))
temp <- unlist(strsplit(as.character(df$results2), "\n"))
temp
temp[1]
temp[1]2
strsplit(df$results2)
strsplit(df$results2, "\n")
strsplit(df$results2, "")
strsplit(df$results2, " ")
library(tidyr)
separate(df, results2)
separate(df, df$results2)
col(df)
colnames(df)
separate(df, df$results2)
separate(df, as.character(df$results2))
df$results2 <- as.character(df$results2)
separate(df, df$results2)
separate(df, results2)
separate(df, results2, c("Age", "Sex")))
separate(df, results2, c("Age", "Sex"))
library(stringr)
str_extract_all(df$results2[1], "\\(?[0-9,.]+\\)?")
str_extract_all(df$results2, "\\(?[0-9,.]+\\)?")
ages <- str_extract_all(df$results2[1], "\\(?[0-9,.]+\\)?")
ages[1]
ages[[1]]
unlist(ages)
source('~/Desktop/Cap_Stone/test2.R', echo=TRUE)
ages <- str_extract_all(df$results2, "\\(?[0-9,.]+\\)?")
ages[1]
ages[2]
unlist(ages)
ages <- unlist(str_extract_all(df$results2, "\\(?[0-9,.]+\\)?"))
as.data.frame(ages)
mean(ages)
mean(as.numeric(ages))
sex <- unlist(str_extract_all(df$results2, "\\(?[M,F]+\\)?"))
df <- cbind(as.data.frame(results), ages, sex, results3)
View(df)
user_names <- xpathSApply(res, "//*/a[@class='fl-member-card__user']/text()", xmlValue)
df <- cbind(as.data.frame(user_names), ages, sex, results3)
View(df)
user_name <- xpathSApply(res, "//*/a[@class='fl-member-card__user']/text()", xmlValue)
age <- unlist(str_extract_all(df$results2, "\\(?[0-9,.]+\\)?"))
city <- xpathSApply(res, "//*/span[@class='fl-member-card__location']/text()", xmlValue)
df <- cbind(as.data.frame(user_names), ages, sex, city)
View(df)
View(df)
hist(df$ages)
hist(as.numeric(df$ages))
as.numeric(df$ages)
df$ages
df$ages[1]
as.numeric(df$ages[1])
class(df$ages[1])
as.character(df$ages[1])
as.numeric(as.character(df$ages[1]))
hist(as.numeric(as.character(df$ages)))
library(rvest)
url <- http://www.dcnyhistory.org/joyce/cenmid19.html
census <- url %>%
html() %>%
html_nodes(xpath='/html/body/table/tbody/tr/td/table') %>%
html_table()
url <- http://www.dcnyhistory.org/joyce/cenmid19.html
url <- 'http://www.dcnyhistory.org/joyce/cenmid19.html'
census <- url %>%
read_html() %>%
html_nodes(xpath='/html/body/table/tbody/tr/td/table') %>%
html_table()
census
census[[1]]
census <- url %>%
html() %>%
html_nodes(xpath='/html/body/table/tbody/tr/td/table') %>%
html_table()
data("Titanic")
head(Titanic)
Titanic
Titanic[1]
Titanic
class(Titanic)
Titanic[[1]]
install.packages("titanic")
library(titanic)
head(titanic_test)
str(titanic_test)
head(titanic_train)
str(titanic_train)
make_factors <- c("PassengerID", "Survived", "Pclass", "Sex", "cabin", "Embarked")
for(i in make_factors){
titanic_train$i <- factor(titanic_train$i)
}
for(i in make_factors){
titanic_train[, i] <- factor(titanic_train[, i])
}
titanic_train$PassengerId <- factor(titanic_train$PassengerId)
library(dplyr)
train <- titanic_train %>%
mutate_each_(funs(factor), make_factors)
make_factors <- c("PassengerId", "Survived", "Pclass", "Sex", "cabin", "Embarked")
train <- titanic_train %>%
mutate_each_(funs(factor), make_factors)
make_factors <- c("PassengerId", "Survived", "Pclass", "Sex", "Cabin", "Embarked")
train <- titanic_train %>%
mutate_each_(funs(factor), make_factors)
str(train)
library(ggplot2)
summarise(train)
summary(train)
ggplot(train, aes(x = Age)) +
geom_histogram()
ggplot(train, aes(x = SibSp)) +
geom_histogram()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(train, aes(x = Survived, fill = Sex)) +
geom_bar()
hist(train$Age)
hist(train$Age, bins = 10)
hist(train$Age, binwidth = 10)
hist(train$Age)
hist(train$Age, breaks = 10)
hist(train$Age, breaks = 20)
train <- titanic_train %>%
mutate_each_(funs(factor), make_factors) %>%
mutate(AgeGroup = ifelse(Age <= 15, "Kid",
ifelse(Age > 15 & Age <= 40, "Adult", "Older Adult")))
str(train)
train <- titanic_train %>%
mutate_each_(funs(factor), make_factors) %>%
mutate(AgeGroup = ifelse(Age <= 15, "Kid",
ifelse(Age > 15 & Age <= 40, "Adult", "Older Adult"))) %>%
mutate(AgeGroup = factor(AgeGroup))
str(train)
ggplot(train, aes(x = Survived, fill = Sex)) +
geom_bar()
ggplot(train, aes(x = Survived, fill = AgeGroup)) +
geom_bar()
ggplot(train, aes(x = Survived, y = AgeGroup)) +
geom_point()
ggplot(train, aes(x = Survived, y = Age)) +
geom_point()
ggplot(train, aes(x = Survived, y = Age)) +
geom_boxplot()
ggplot(train, aes(x = Survived, fill = AgeGroup)) +
geom_bar()
ggplot(train, aes(x = Survived, fill = Sex)) +
geom_bar() +
facet_wrap(~AgeGroup)
ggplot(train, aes(x = Survived, fill = AgeGroup)) +
geom_bar() +
facet_wrap(~Sex)
summary(train$AgeGroup)
hist(subset(train, train$AgeGroup == "Kid"))
hist(subset(train, train$AgeGroup == "Kid")$Age)
hist(train$Age, breaks = 20)
abline(h = dnorm(train$Age, mean = mean(train$Age), sd = sd(train$Age)))
abline(dnorm(train$Age, mean = mean(train$Age), sd = sd(train$Age)))
library(titanic)
data("titanic_train")
library(ggplot2)
library(dplyr)
install.packages('broom')
library(broom)
library(rpart)
title: "Predicting Survival on the Titanic"
library(titanic)
train_df <- data("titanic_train")
t <- data("titanic_train")
library(dplyr)
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
train_df <- titanic_train
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
train_df <- train_df %>%
mutate_each_(funs(factor), var_factors)
glimpse(train_df)
library(ggplot2)
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
ggplot(train_df, aes(x = Sex, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
ggplot(train_df, aes(x = Embarked, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
par(mfrow = c(1, 3))
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
ggplot(train_df, aes(x = Sex, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
ggplot(train_df, aes(x = Embarked, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
library(gridExtra)
library(titanic)
train_df <- titanic_train
str(train_df)
library(dplyr)
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
train_df <- train_df %>%
mutate_each_(funs(factor), var_factors)
str(train_df)
library(ggplot2)
library(gridExtra)
plot_1 <- ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
plot_2 <- ggplot(train_df, aes(x = Sex, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
plot_3 <- ggplot(train_df, aes(x = Embarked, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
return(plot_1)
plot_1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggplot2")
library(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
plot_1
plot_2
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
dev.off()
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
dev.off()
dev.off()
View(train_df)
str(train_df)
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
train_df <- train_df %>%
mutate_each_(funs(factor), var_factors)
library(dplyr)
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
train_df <- train_df %>%
mutate_each_(funs(factor), var_factors)
str(train_df)
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
plot_1
ggplot(train_df, aes(x = Pclass, fill = Survived)) +
geom_histogram(stat = "count", position = "fill")
R.Version()
update.packages()
library(titanic)
train_df <- titanic_train
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
library(dplyr)
train_df_2 <- mutate_each_(train_df, funs(factor), var_factors)
train_df["Survived"]
str(train_df)
for(i in var_factors){
train_df[i] <- factor(train_df[i])
}
for(i in var_factors){
train_df[as.character(i)] <- factor(train_df[as.character(i)])
}
for(i in var_factors){
train_df[, as.character(i)] <- factor(train_df[, as.character(i)])
}
str(train_df)
summary(train_df)
hist(train_df$Age)
abline(v = mean(train_df$Age), col = "red")
abline(v = mean(train_df$Age))
hist(train_df$Age)
abline(v = mean(train_df$Age))
mean(train_df$Age)
mean(train_df$Age, na.rm = TRUE)
abline(v = mean(train_df$Age, na.rm = TRUE))
abline(v = mean(train_df$Age, na.rm = TRUE), col = "red")
abline(v = median(train_df$Age, na.rm = TRUE), col = "blue")
install.packages(rpart.plot)
install.packages("rpart.plot")
ggplot(train_df, aes(x = Embarked, fill = Survived)) +
geom_histogram(stat = "count", position = "fill") +
theme(axis.text.y=element_blank())
library(ggplot2)
ggplot(train_df, aes(x = Embarked, fill = Survived)) +
geom_histogram(stat = "count", position = "fill") +
theme(axis.text.y=element_blank())
1 - .17
getwd()
setwd("/Users/andrewrosa/Desktop/Data_Science_Track")
getwd()
549 + 342
342/891
?include_graphics
prediction <- predict(model, newdata = test_df, type = "class")
model <- rpart(Survived ~ Fare + Sex + Age + Pclass + Embarked + Parch, data = train_df, method = "class")
library(rpart)
library(rpart)
model <- rpart(Survived ~ Fare + Sex + Age + Pclass + Embarked + Parch, data = train_df, method = "class")
test_df <- titanic_test
var_factors2 <- c(var_names[1], var_names[3], var_names[5], var_names[11:12])
for(i in var_factors2){
test_df[, i] <- factor(test_df[, i])
}
prediction <- predict(model, newdata = test_df, type = "class")
prediction
library(knitr)
getwd()
train_df$FamilySize <- train_df$SibSp + train_df$Parch + 1
View(train_df)
family_size <- train_df$SibSp + train_df$Parch + 1
f_s_df <- data.frame(FamilySize = family_size)
train_df <- cbind(train_df, f_s_df)
View(train_df)
train_df <- titanic_train
var_names <- names(train_df)
var_factors <- c(var_names[1:3], var_names[5], var_names[11:12])
for(i in var_factors){
train_df[, i] <- factor(train_df[, i])
}
train_df$Age[is.na(train_df$Age)] <- predict(age_model, newdata = train_df[is.na(train_df$Age),])
age_model <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked, train_df[!is.na(train_df$Age),], method = "anova")
train_df$Age[is.na(train_df$Age)
age_model <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked, train_df[!is.na(train_df$Age),], method = "anova")
train_df$Age[is.na(train_df$Age)] <- predict(age_model, newdata = train_df[is.na(train_df$Age),])
family_size <- train_df$SibSp + train_df$Parch + 1
f_s_df <- data.frame(FamilySize = family_size)
train_df <- cbind(train_df, f_s_df)
model_2 <- rpart(Survived ~ Fare + Sex + Age + Pclass + Embarked + Parch + SibSp + FamilySize, train_df, method = "class")
prediction_2 <- predict(model_2, newdata = test_df, type = "class")
library(rpart.plot)
summary(train_df)
View(train_df)
table(train_df$Pclass, train_df$Embarked)
table1 <- table(train_df$Pclass, train_df$Embarked)
table1[,2]
85 / sum(table1[,2])
2 / sum(table1[,3)
2 / sum(table1[,3])
127 / sum(table1[,4])
1 - .17
iris_df <- iris
answers <- data.frame(Species = iris_df$Species)
iris_df <- iris_df[1:4]
summary(iris_df)
model <- kmeans(iris_df, centers = 3)
model
model$cluster
iris_df <- iris
species <- as.list(iris_df$Species)
species
table(species, model$cluster)
str(species)
unlist(species)
source('~/.active-rstudio-document', echo=TRUE)
species <- unlist(species)
table(species, model$cluster)
iris_sc <- as.data.frame(scale(iris_df))
View(iris_sc)
model_2 <- kmeans(iris_sc, 3)
table(species, model_2$cluster)
50 + 39 + 36
125/150
iris_dist <- dist(iris_sc, method = "euclidean")
iris_single <- hclust(iris_dist, method = "single")
iris_single
memb_single <- cutree(run_single, 3)
memb_single <- cutree(iris_single, 3)
memb_single
model_3 <- hclust(iris_dist, method = "single")
model_3_cut <- cutree(model_3, 3)
table(species, model_3_cut)
49 + 50
99/150
model_3 <- hclust(iris_dist, method = "complete")
model_3_cut <- cutree(model_3, 3)
table(species, model_3_cut)
49 + 21 + 48
118 / 150
iris_dist <- dist(iris_df, method = "euclidean")
model_3 <- hclust(iris_dist, method = "complete")
model_3_cut <- cutree(model_3, 3)
table(species, model_3_cut)
50 + 27 + 49
126 / 150
iris_dist <- dist(iris_df, method = "euclidean")
model_3 <- hclust(iris_dist, method = "single")
model_3_cut <- cutree(model_3, 3)
table(species, model_3_cut)
iris_dist
scale_colour_hue()
50 + 50 + 2
102/150
50 + 27 + 49
126/150
set.seed(3949)
model_3 <- kmeans(iris_df, centers = 3)
table(species, model_3$cluster)
model_3$cluster
library(knitr)
134/150
50 + 48+36
50 + 48 + 36
134/150
getwd()
setwd("/Users/andrewrosa/Desktop/MotorTrend_Project")
mtcars
row.names(mtcars)
mtcars$Model <- rownames(mtcars)
View(mtcars)
cor(mtcars$disp, mtcars$mpg)
cor(mtcars$disp, log(mtcars$mpg))
cor(log(mtcars$disp), log(mtcars$mpg))
cor(mtcars$drat, mtcars$mpg)
paste(cor(mtcars$drat, mtcars$mpg))
paste(round(cor(mtcars$drat, mtcars$mpg), 2))
"cor:" + paste(round(cor(mtcars$drat, mtcars$mpg), 2))
paste0("cor: ", round(cor(mtcars$drat, mtcars$mpg), 2))
